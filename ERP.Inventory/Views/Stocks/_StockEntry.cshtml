
@{
    ViewBag.Title = "Entry Stocks Page";
}

@section Styles{
    <link href="~/Content/EntryStocks.css" rel="stylesheet">
}

<form action="#" method="post" name=StockEntryForm>

    <div class="entrycontent">
        <div class="entrycontent__headertitle"><h1> Entry Stocks</h1></div>
        <div class="entrycontent__route">
            <div class="route__supplier">
                <fieldset class="supplier__fieldset">
                    <legend>SUPPLIER</legend>
                    <div class="fieldset__supcontent">
                        <div class="supcontent__label"><h4>SUPPLIER</h4></div>
                        <div class="supcontent__input"><input type="text" name="SupplierName"></div>
                        <div class="supcontent__label"><h4>SUP ID</h4></div>
                        <div class="supcontent__input"><input type="text" name="SupplierID" readonly></div>
                        <div class="supcontent__label"><h4>DOC NO</h4></div>
                        <div class="supcontent__input"><input type="text" name="DocNumber"></div>
                        <div class="supcontent__label"><h4>RCV BY</h4></div>
                        <div class="supcontent__input"><input type="text" name="ReceivedBy"></div>
                    </div>
                </fieldset>
            </div>
            <div class="route__project">
                <fieldset class="project__fieldset">
                    <legend>PROJECT</legend>
                    <div class="fieldset__projcontent">
                        <div class="projcontent__label"><h4>PRJ NAME</h4></div>
                        <div class="projcontent__input"><input type="text" name="ProjectName"></div>
                        <div class="projcontent__label"><h4>PRJ NO</h4></div>
                        <div class="projcontent__input"><input type="text" name="ProjectNumber" readonly></div>
                        <div class="projcontent__label"><h4>LOCATION</h4></div>
                        <div class="projcontent__input"><input type="text" name="ProjectLocation"></div>
                        <div class="projcontent__label"><h4>DEL DATE</h4></div>
                        <div class="projcontent__input"><input type="text" name="DeliveryDate" class="date-picker"></div>
                    </div>
                </fieldset>
            </div>
            <div class="route__delmethod">
                <fieldset class="delmethod__fieldset">
                    <legend>DELIVERY</legend>
                    <div class="fieldset__delcontent">
                        <div class="delcontent__label"><h4>METHOD</h4></div>
                        <div class="delcontent__input">
                            <select class="delMethodID">
                                <option value="1">DELIVERY TRUCK</option>
                                <option value="2">COURIER</option>
                                <option value="3">MESSENGER</option>
                            </select>
                        </div>
                        @*<div class="delcontent__label"><h4>DRIVER</h4></div>
                            <div class="delcontent__input"><input type="text"></div>
                            <div class="delcontent__label"><h4>PLATE NO</h4></div>
                            <div class="delcontent__input"><input type="text"></div>
                            <div class="delcontent__label"><h4>VH TYPE</h4></div>
                            <div class="delcontent__input"><input type="text"></div>*@
                    </div>
                </fieldset>
            </div>
        </div>
        <div class="entrycontent__tabletitle">
            <h1>Enter new stock here...</h1>
        </div>
        <div class="entrycontent__tableitem">
            <table class="tableitem__table">
                <thead>
                    <tr>
                        <td>NO</td>
                        <td>DESCRIPTION</td>
                        <td>UNITS</td>
                        <td>QTY</td>
                        <td>PRICE</td>
                        <td>COND</td>
                    </tr>
                </thead>
                <tbody class="stock__entry__tbody">
                    @for (var i = 1; i <= 10; i++)
                    {
                        <tr class="stock__entry__tr">
                            <td class="counter">@i</td>
                            <td><input type="text" name="Items" onkeypress="fnGetItems(event)"></td>
                            <td><input type="text" name="Units" onkeypress="fnGetUnits(event)"></td>
                            <td><input type="text" name="Qty"></td>
                            <td><input type="text" name="UnitPrice"></td>
                            <td class="position__relative">
                                <input type="text" name="ItemCondition" onkeypress="fnGetItemCondition(event)">
                                <i class="fa fa-remove remove__btn" onclick="fnRemoveItemStockEntry(event)"></i>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
            <a href="javascript:void(0)" class="add__new_item__stockEntry">Add New Item</a>
        </div>
        <div class="entrycontent__footer">
            <div class="footer__saveupload">
                <input type="submit" value="Save">
            </div>
        </div>
    </div>

</form>




<table style="display: none" class="stock__entry__tbody__clone">
    <tr class="">
        <td class="counter"></td>
        <td><input type="text" name="Items" onkeypress="fnGetItems(event)"></td>
        <td><input type="text" name="Units" onkeypress="fnGetUnits(event)"></td>
        <td><input type="text" name="Qty"></td>
        <td><input type="text" name="UnitPrice"></td>
        <td class="position__relative">
            <input type="text" name="ItemCondition" onkeypress="fnGetItemCondition(event)">
            <i class="fa fa-remove remove__btn" onclick="fnRemoveItemStockEntry(event)"></i>
        </td>
    </tr>
</table>

@section Scripts{

    <script>

        $('.add__new_item__stockEntry').on('click', function () {

            var number = $('.stock__entry__tr').length;

            $('.stock__entry__tbody__clone').find('tr').addClass('stock__entry__tr');
            $('.stock__entry__tbody__clone').find('td.counter').eq(0).text(number + 1);

            $('.stock__entry__tbody').append(
                $('.stock__entry__tbody__clone tbody').html()
            );

            $('.stock__entry__tbody__clone').find('tr').removeClass('stock__entry__tr');
        });


        function fnRemoveItemStockEntry(event) {
            var $this = $(event.target);

            $this.closest('tr').remove();

            var counter = $('.tableitem__table').find('td.counter').length;

            //console.log(counter);

            //return;

            if (counter > 0) {
                for (var i = 0; i < counter; i++) {

                    $('.tableitem__table').find('.counter').eq(i).text(i + 1);
                }
            }
        }


        $(function () {

            $('.delMethodID').trigger('change');

            //FOR PROJECTS
            var project = [];
            var projectURL = '/Data/ENGProjectList';

            $.getJSON(projectURL, function (data) {
                //var dat = data.Data;

                for (var i = 0; i < data.length; i++) {

                    var newObj = {};

                    newObj.id = data[i].ID;
                    newObj.value = data[i].ProjectName;
                    newObj.label = data[i].ProjectNumber + '-' + data[i].ProjectName;
                    newObj.projectNo = data[i].ProjectNumber;

                    project.push(newObj);

                }

                $("input[name=ProjectName]").autocomplete({
                    source: project,
                    select: function (event, ui) {

                        $(this).attr('data-val', ui.item.id);
                        $(this).parents('.project__fieldset').find('input[name=ProjectNumber]').val(ui.item.projectNo);
                    }
                });
            });


            //FOR SUPPLIER
            var suppliers = [];
            var supplierURL = '/Data/VendorList';

            $.getJSON(supplierURL, function (data) {

                for (var i = 0; i < data.length; i++) {

                    var newObj = {};

                    newObj.id = data[i].SupplierID;
                    newObj.value = data[i].SupplierName;
                    newObj.label = data[i].SupplierName;

                    suppliers.push(newObj);

                }

                $("input[name=SupplierName]").autocomplete({
                    source: suppliers,
                    select: function (event, ui) {

                        $(this).attr('data-val', ui.item.id);
                        $(this).parents('.fieldset__supcontent').find('input[name=SupplierID]').val(ui.item.id);
                    }
                })
            });

            //FOR RECEIVED BY
            var receivedBy = [];

            var receivedByURL = '/Data/HRMSEmployeeList/';
            $.getJSON(receivedByURL, function (data) {

                for (var i = 0; i < data.length; i++) {
                    var obj = {};

                    obj.id = data[i].ID;
                    obj.value = data[i].FirstName + ' ' + data[i].LastName;
                    obj.label = data[i].FirstName + ' ' + data[i].LastName;

                    receivedBy.push(obj);


                    $("input[name=ReceivedBy]").autocomplete({
                        source: receivedBy,
                        select: function (event, ui) {

                            console.log($(this));

                            $(this).attr('data-val', ui.item.id);
                        }
                    })

                }

            });

        });

        $(function () {
            $('form[name=StockEntryForm]').validate({
                rules: {
                    SupplierName: "required",
                    ProjectName: "required",
                    ReceivedBy: "required",
                    DocNumber: "required",
                    DeliveryDate: "required"
                },
                errorPlacement: function () {
                    return false;
                },

                submitHandler: function (form, event) {
                    event.preventDefault();

                    fnSaveStockEntry(form);
                }
            });

            $("[name^=DeliveryMethodAttr]").each(function () {
                $(this).rules("add", {
                    required: true
                });
            });

        })


        //SAVE DATA
        function fnSaveStockEntry(form) {

            var stockEntryItem = [];
            var $this = $(form);


            //FOR STOCK ENTRY ITEM
            $this.find('.stock__entry__tr').each(function () {

                var obj = {
                    ID: 0,
                    DocEntryID_007: 0,
                    ItemID_011: $(this).find('input[name=Items]').attr('data-val') || 0,
                    UnitID_009: $(this).find('input[name=Units]').attr('data-val') || 0,
                    ItemConditionID_018: $(this).find('input[name=ItemCondition]').attr('data-val') || 0,
                    Quantity: $(this).find('input[name=Qty]').val() || 0,
                    UnitPrice: $(this).find('input[name=UnitPrice]').val() || 0
                };

                if (obj.ItemID_011 !== 0) {
                    stockEntryItem.push(obj);
                }

            });

            let current_datetime = new Date();
            let formatted_date = (current_datetime.getMonth() + 1) + "/" + current_datetime.getDate() + "/" + current_datetime.getFullYear();



            //FOR DELIVERY ENTRY

            var DeliveryMethodEntryList = [];
            $('.deliveryMethodAttr').each(function () {

                var obj = {
                    ID: 0,
                    DocEntryListID_007: 0,
                    DelMethodAttrID_008: $(this).attr('data-id'),
                    AttributeValueID_008a: 0,
                    AttributeValue: $(this).val()
                };

                if (obj.AttributeValue !== "") {
                    DeliveryMethodEntryList.push(obj);
                }
            });

            var DeliveryMethod = {

                // ID: $('.delMethodID').val(),
                Name: $('.delMethodID').children('option:selected').text(),
                DelMethodAttribute: [{
                    ID: 0,
                    DelMethodID_010: $('.delMethodID').val(),
                    MethodAttribute: '',
                    DeliveryMethodEntryList: DeliveryMethodEntryList
                }]

            };


            //FOR STOCK ENTRY HEADER
            var DocEntry = {
                ID: 0,
                SupID_VendorDB: $this.find('input[name=SupplierName]').attr('data-val') || 0,
                ProjectID_EnggDB: $this.find('input[name=ProjectName]').attr('data-val') || 0,
                DocumentNumber: $this.find('input[name=DocNumber]').val() || 0,
                DeliveryDate: $this.find('input[name=DeliveryDate]').val() || 0,
                EntryDate: formatted_date,
                ReceiverID_HRDB: $this.find('input[name=ReceivedBy]').attr('data-val') || 0,
                ItemEntryList: stockEntryItem,
                DeliveryMethod: DeliveryMethod
            };

            console.log(DocEntry);

            return;

            $.ajax({
                headers: {
                    Accept: "application/json",
                    "Content-Type": "application/json"
                },
                type: 'post',
                url: '/Data/NewItemHeaderList',
                dataType: 'json',
                data: JSON.stringify(DocEntry),
                contentType: "application/json",
                success: function (response) {
                    if (response.RetVal === 1) {
                        swal.fire('Success', response.Message, 'success');

                        //Clear Stock Entry Header
                        $('form[name=StockEntryForm]').find('input').val("");

                    }
                    else {
                        swal.fire('Error', response.Message, 'error');
                    }
                },
                error: function (jqXHR, exception) {

                    var msg = '';
                    if (jqXHR.status === 0) {
                        msg = 'Not connect.\n Verify Network.';
                    } else if (jqXHR.status == 404) {
                        msg = 'Requested page not found. [404]';
                    } else if (jqXHR.status == 500) {
                        msg = 'Internal Server Error [500].';
                    } else if (exception === 'parsererror') {
                        msg = 'Requested JSON parse failed.';
                    } else if (exception === 'timeout') {
                        msg = 'Time out error.';
                    } else if (exception === 'abort') {
                        msg = 'Ajax request aborted.';
                    } else {
                        msg = 'Uncaught Error.\n' + jqXHR.responseText;
                    }

                    swal.fire('Error', msg, 'error');
                },
            });

        }

    </script>

}